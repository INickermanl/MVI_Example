package com.nikolai.mviexample.repository.mainimport androidx.lifecycle.LiveDataimport com.nikolai.mviexample.api.RetrofitBuilderimport com.nikolai.mviexample.model.BlogPostimport com.nikolai.mviexample.model.Userimport com.nikolai.mviexample.ui.main.state.MainViewStateimport com.nikolai.mviexample.util.ApiSuccessResponseimport com.nikolai.mviexample.util.DataStateimport com.nikolai.mviexample.util.GenericApiResponseobject MainRepository {	fun getBlogPosts(): LiveData<DataState<MainViewState>> {		return object : NetworkBoundResource<List<BlogPost>, MainViewState>() {			override fun handleApiSuccessResponse(response: ApiSuccessResponse<List<BlogPost>>) {				result.value = DataState.data(data = MainViewState(blogPost = response.body))			}			override fun createCall(): LiveData<GenericApiResponse<List<BlogPost>>> =					RetrofitBuilder.apiService.getBlogPosts()		}.asLiveData()	}	fun getUser(userId: String): LiveData<DataState<MainViewState>> {		return object : NetworkBoundResource<User, MainViewState>() {			override fun handleApiSuccessResponse(response: ApiSuccessResponse<User>) {				result.value = DataState.data(data = MainViewState(user = response.body))			}			override fun createCall(): LiveData<GenericApiResponse<User>> =					RetrofitBuilder.apiService.getUser(userId)		}.asLiveData()	}}