package com.nikolai.mviexample.repository.mainimport androidx.lifecycle.LiveDataimport androidx.lifecycle.Transformationsimport com.nikolai.mviexample.api.RetrofitBuilderimport com.nikolai.mviexample.ui.main.state.MainViewStateimport com.nikolai.mviexample.util.ApiEmptyResponseimport com.nikolai.mviexample.util.ApiErrorResponseimport com.nikolai.mviexample.util.ApiSuccessResponseobject MianRepository {	fun getBlogPosts(): LiveData<MainViewState> {		return Transformations				.switchMap(RetrofitBuilder.apiService.getBlogPosts()) { genericApiResponse ->					object : LiveData<MainViewState>() {						override fun onActive() {							super.onActive()							value = when (genericApiResponse) {								is ApiSuccessResponse -> {									MainViewState(blogPost = genericApiResponse.body)								}								is ApiErrorResponse -> {									MainViewState()								}								is ApiEmptyResponse -> {									MainViewState()								}							}						}					}				}	}	fun getUser(userId: String): LiveData<MainViewState> {		return Transformations				.switchMap(RetrofitBuilder.apiService.getUser(userId)) { genericApiResponse ->					object : LiveData<MainViewState>() {						override fun onActive() {							super.onActive()							value = when (genericApiResponse) {								is ApiSuccessResponse -> {									MainViewState(user = genericApiResponse.body)								}								is ApiErrorResponse -> {									MainViewState()								}								is ApiEmptyResponse -> {									MainViewState()								}							}						}					}				}	}}