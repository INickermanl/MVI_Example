package com.nikolai.mviexample.utildata class DataState<T>(		var message: Event<String>? = null,		var errorMessage: Event<String>? = null,		var loading: Boolean = false,		var data: Event<T>? = null) {	companion object {		fun <T> error(errorMessage: String): DataState<T> {			return DataState(errorMessage = Event.errorEvent(errorMessage),					data = null,					loading = false)		}		fun <T> loading(isLoading: Boolean): DataState<T> {			return DataState(errorMessage = null,					loading = isLoading,					data = null)		}		fun <T> data(errorMessage: String? = null,					 message: String? = null,					 data: T? = null): DataState<T> {			return DataState(errorMessage = Event.errorEvent(errorMessage),					data = Event.dataEvent(data),					message = Event.messageEvent(message),					loading = false)		}	}	override fun toString(): String {		return "DataState(message=$errorMessage, loading=$loading, data=$data message=$message)"	}}